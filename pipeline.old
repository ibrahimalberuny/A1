name: Deploy Gatsby

on:
  push:
    branches: [master, dev]
  repository_dispatch:
    types: [strapi_webhook]
  workflow_dispatch:

jobs:
  deploy_dev:
    if: ${{ github.ref == 'refs/heads/dev' || ( github.ref == 'refs/heads/master' && github.event.client_payload.ref == 'dev' ) }}
    name: Deploy Gatsby in S3 dev
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set AWS credential for dev deployment
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: us-east-1

      - name: Delete old files dev
        uses: appleboy/ssh-action@master
        env:
          SSH_FOLDER: ${{ secrets.SSH_FOLDER }}
        with:
          host: ${{ secrets.SSH_HOST_DEV }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY_DEV }}
          envs: SSH_FOLDER
          script: |
            sudo rm -R $SSH_FOLDER || true

      - name: Copy files to server dev
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEV }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY_DEV }}
          source: '*'
          target: ${{ secrets.SSH_FOLDER }}

      - name: Set DEPLOYMENT_ENV for dev branch dev
        run: |
          echo "DEPLOYMENT_ENV=dev" >> $GITHUB_ENV

      - name: Run Build with SSH dev
        uses: appleboy/ssh-action@master
        env:
          SSH_FOLDER: ${{ secrets.SSH_FOLDER }}
          GOOGLE_TRACKING_ID: ${{ secrets.GOOGLE_TRACKING_ID_DEV }}
          DEPLOYMENT_ENV: ${{ env.DEPLOYMENT_ENV }}
          CAPTCHA_KEY: ${{ secrets.CAPTCHA_KEY }}
          BACK_URL: ${{ secrets.BACK_URL_DEV }}
        with:
          host: ${{ secrets.SSH_HOST_DEV }}
          username: ${{ secrets.SSH_USER }}
          command_timeout: 60m
          key: ${{ secrets.SSH_KEY_DEV }}
          envs: SSH_FOLDER,DEPLOYMENT_ENV,GOOGLE_TRACKING_ID,CAPTCHA_KEY,BACK_URL
          script: |
            cd $SSH_FOLDER
            npm ci
            DEPLOYMENT_ENV=$DEPLOYMENT_ENV GOOGLE_TRACKING_ID=$GOOGLE_TRACKING_ID CAPTCHA_KEY=$CAPTCHA_KEY BACK_URL=$BACK_URL npm run build

      - name: Sleep 2m
        run: |
          sleep 2m
      
      - name: Run Deploy with SSH dev
        uses: appleboy/ssh-action@master
        env:
          SSH_FOLDER: ${{ secrets.SSH_FOLDER }}
          GOOGLE_TRACKING_ID: ${{ secrets.GOOGLE_TRACKING_ID_DEV }}
          DEPLOYMENT_ENV: ${{ env.DEPLOYMENT_ENV }}
          CAPTCHA_KEY: ${{ secrets.CAPTCHA_KEY }}
          BACK_URL: ${{ secrets.BACK_URL_DEV }}
        with:
          host: ${{ secrets.SSH_HOST_DEV }}
          username: ${{ secrets.SSH_USER }}
          command_timeout: 60m
          key: ${{ secrets.SSH_KEY_DEV }}
          envs: SSH_FOLDER,DEPLOYMENT_ENV,GOOGLE_TRACKING_ID,CAPTCHA_KEY,BACK_URL
          script: |
            cd $SSH_FOLDER
            DEPLOYMENT_ENV=$DEPLOYMENT_ENV GOOGLE_TRACKING_ID=$GOOGLE_TRACKING_ID CAPTCHA_KEY=$CAPTCHA_KEY BACK_URL=$BACK_URL npm run deploy

      - name: Invalidate dev CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_DEV }}

  deploy_prod:
    if: ${{ github.ref == 'refs/heads/master' && !github.event.client_payload.ref }}
    name: Deploy Gatsby in S3 prod
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set AWS credential for prod deployment
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Delete old files prod
        uses: appleboy/ssh-action@master
        env:
          SSH_FOLDER: ${{ secrets.SSH_FOLDER }}
        with:
          host: ${{ secrets.SSH_HOST_PROD }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY_PROD }}
          envs: SSH_FOLDER
          script: |
            sudo rm -R $SSH_FOLDER || true

      - name: Copy files to server prod
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST_PROD }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY_PROD }}
          source: '*'
          target: ${{ secrets.SSH_FOLDER }}

      - name: Set DEPLOYMENT_ENV for prod branch prod
        run: |
          echo "DEPLOYMENT_ENV=prod" >> $GITHUB_ENV

      - name: Run Build with SSH prod
        uses: appleboy/ssh-action@master
        env:
          SSH_FOLDER: ${{ secrets.SSH_FOLDER }}
          GOOGLE_TRACKING_ID: ${{ secrets.GOOGLE_TRACKING_ID }}
          DEPLOYMENT_ENV: ${{ env.DEPLOYMENT_ENV }}
          CAPTCHA_KEY: ${{ secrets.CAPTCHA_KEY }}
          BACK_URL: ${{ secrets.BACK_URL_PROD }}
        with:
          host: ${{ secrets.SSH_HOST_PROD }}
          username: ${{ secrets.SSH_USER }}
          command_timeout: 60m
          key: ${{ secrets.SSH_KEY_PROD }}
          envs: SSH_FOLDER,DEPLOYMENT_ENV,GOOGLE_TRACKING_ID,CAPTCHA_KEY,BACK_URL
          script: |
            cd $SSH_FOLDER
            npm ci
            DEPLOYMENT_ENV=$DEPLOYMENT_ENV GOOGLE_TRACKING_ID=$GOOGLE_TRACKING_ID CAPTCHA_KEY=$CAPTCHA_KEY BACK_URL=$BACK_URL npm run build

      - name: Sleep 2m
        run: |
          sleep 2m

      - name: Run Deploy with SSH prod
        uses: appleboy/ssh-action@master
        env:
          SSH_FOLDER: ${{ secrets.SSH_FOLDER }}
          GOOGLE_TRACKING_ID: ${{ secrets.GOOGLE_TRACKING_ID }}
          DEPLOYMENT_ENV: ${{ env.DEPLOYMENT_ENV }}
          CAPTCHA_KEY: ${{ secrets.CAPTCHA_KEY }}
          BACK_URL: ${{ secrets.BACK_URL_PROD }}
        with:
          host: ${{ secrets.SSH_HOST_PROD }}
          username: ${{ secrets.SSH_USER }}
          command_timeout: 60m
          key: ${{ secrets.SSH_KEY_PROD }}
          envs: SSH_FOLDER,DEPLOYMENT_ENV,GOOGLE_TRACKING_ID,CAPTCHA_KEY,BACK_URL
          script: |
            cd $SSH_FOLDER
            DEPLOYMENT_ENV=$DEPLOYMENT_ENV GOOGLE_TRACKING_ID=$GOOGLE_TRACKING_ID CAPTCHA_KEY=$CAPTCHA_KEY BACK_URL=$BACK_URL npm run deploy

      - name: Invalidate prod CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PROD }}